<Activity mc:Ignorable="sap sap2010" x:Class="Gestion_Variable" this:Gestion_Variable.in_file="test" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_file" Type="InArgument(x:String)" />
    <x:Property Name="in_DestFolder" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1410.4,1931.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="80">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Activities.Core.Presentation</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>UiPath.Form.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.Core.Presentation</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Gestion_Variable" sap:VirtualizedContainerService.HintSize="375.2,1726.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="DTGestionVariable" />
      <Variable x:TypeArguments="x:String" Name="NodeGestionVariable" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24" xml:space="preserve">"   =&gt;debut workflow Gestion de variable"</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:BuildDataTable DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Workflow&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Nom&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Action&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;idref&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <ui:BuildDataTable.DataTable>
        <OutArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">DTGestionVariable</mca:CSharpReference>
        </OutArgument>
      </ui:BuildDataTable.DataTable>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="333.6,99.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">NodeGestionVariable</mca:CSharpReference>
              </OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">Variable</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23" xml:space="preserve">"      =&gt;debut invoke code variable inutilise"</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="/*****************Variables*************/&#xA;&#xA;&#xA;string path = in_FilePath;&#xA;DataTable temp = io_Dt;&#xA;&#xA;&#xA;/** Read Selected File ***/&#xA;StreamReader sr = new StreamReader(path);&#xA;string xmlText = sr.ReadToEnd();&#xA;/*** Close File***/&#xA;sr.Close();&#xA;&#xA;&#xA;/*** Parse xaml file to XML***/&#xA;XDocument xDoc = XDocument.Parse(xmlText);&#xA;// Assign the namespaces used In the XAML file&#xA;XNamespace xNameSpace = &quot;http://schemas.uipath.com/workflow/activities&quot;;&#xA;XNamespace sap2010 = &quot;http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation&quot;;&#xA;&#xA;/**** Select unused variables ***/&#xA;xDoc.Descendants().Elements().Where(p =&gt; p.Name.LocalName == in_xName &amp;&amp; Regex.Matches(xmlText, p.Attribute(&quot;Name&quot;).Value).Count &lt;= 1)&#xA;&#x9; .ToList()&#xA;&#x9;&#x9;&#x9;&#x9;    .ForEach(&#xA;&#x9;&#x9;&#x9;&#x9;        e =&gt;&#xA;&#x9;&#x9;&#x9;&#x9;        {&#xA;&#x9;&#x9;&#x9;&#x9;            /** Assign detected unused variables to DataRow **/&#xA;&#x9;&#x9;&#x9;&#x9;            DataRow dr = temp.NewRow();&#xA;&#x9;&#x9;&#x9;&#x9;            dr[0] = path;&#xA;&#x9;&#x9;&#x9;&#x9;            dr[1] = e.Name.LocalName;&#xA;&#x9;&#x9;&#x9;&#x9;            dr[2] = e.Attribute(&quot;Name&quot;).Value;&#xA;&#x9;&#x9;&#x9;&#x9;            dr[3] = &quot;Doit être supprimer&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;XElement currentElement = e;&#xA;&#x9;XAttribute idrefAttr = null;&#xA;&#x9;&#x9;while (currentElement != null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    idrefAttr = currentElement.Attribute(sap2010 + &quot;WorkflowViewState.IdRef&quot;);&#xA;&#x9;&#x9;    if (idrefAttr != null)&#xA;&#x9;&#x9;    {&#xA;&#x9;&#x9;        break;&#xA;&#x9;&#x9;    }&#xA;&#x9;&#x9;    currentElement = currentElement.Parent;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;if (idrefAttr != null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    string idrefValue = idrefAttr.Value;&#x9;    &#xA;&#x9;&#x9;    dr[4] = idrefValue;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;            temp.Rows.Add(dr);&#xA;&#x9;&#x9;&#x9;&#x9;        }&#xA;&#x9;&#x9;&#x9;&#x9;    );&#xA;/**Assign modified DataTable**/&#xA;io_Dt = temp;&#xA;/**Save File**/&#xA;xDoc.Save(path);&#xA;" DisplayName="Invoke code Gestion variable Inutilisées" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_xName">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">NodeGestionVariable</mca:CSharpValue>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">in_file</mca:CSharpValue>
        </InArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_Dt">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">DTGestionVariable</mca:CSharpReference>
        </InOutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21" xml:space="preserve">"      =&gt;debut invoke code variable Generic Value"</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="&#xA;&#xA;// Charger la séquence UiPath à partir d'un fichier XAML&#xA;string path = in_FilePath;&#xA;DataTable temp = io_Dt;&#xA;XDocument xDoc = XDocument.Load(path);&#xA;XNamespace uiNameSpace = &quot;http://schemas.uipath.com/workflow/activities&quot;;&#xA;XNamespace xNameSpace=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;;&#xA;XNamespace node=&quot;http://schemas.microsoft.com/netfx/2009/xaml/activities&quot;;&#xA;XNamespace sap2010 = &quot;http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation&quot;;&#xA;&#xA;// Trouver tous les éléments &quot;variable&quot; avec l'attribut &quot;x:TypeArguments&quot; égal à &quot;ui:GenericValue&quot;&#xA;&#xA;// Boucler à travers tous les éléments &quot;variable&quot; pour ajouter des informations à la DataTable&#xA;var variables = xDoc.Descendants(node + &quot;Variable&quot;).Where(v =&gt; v.Attribute(xNameSpace + &quot;TypeArguments&quot;).Value.Contains(&quot;GenericValue&quot;));&#xA;&#xA;foreach (var variable in variables)&#xA;{&#xA;    DataRow dr = temp.NewRow();&#xA;    dr[0] = path;&#xA;&#x9; dr[1] = variable.Name.LocalName;&#xA;    dr[2] = variable.Attribute(&quot;Name&quot;).Value;&#xA;    dr[3] = &quot;check variable type svp&quot;;&#xA;&#x9;XElement currentElement = variable;&#xA;&#x9;XAttribute idrefAttr = null;&#xA;&#x9;&#x9;while (currentElement != null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    idrefAttr = currentElement.Attribute(sap2010 + &quot;WorkflowViewState.IdRef&quot;);&#xA;&#x9;&#x9;    if (idrefAttr != null)&#xA;&#x9;&#x9;    {&#xA;&#x9;&#x9;        break;&#xA;&#x9;&#x9;    }&#xA;&#x9;&#x9;    currentElement = currentElement.Parent;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;if (idrefAttr != null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    string idrefValue = idrefAttr.Value;&#x9;    &#xA;&#x9;&#x9;    dr[4] = idrefValue;&#xA;&#x9;&#x9;}&#xA;    temp.Rows.Add(dr);&#xA;}&#xA;&#xA;// Enregistrer les modifications apportées à la DataTable et au fichier XAML&#xA;io_Dt = temp;&#xA;xDoc.Save(path);&#xA;&#xA;&#xA;&#xA;" DisplayName="Invoke code Gestion variable Generic Value" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">in_file</mca:CSharpValue>
        </InArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_Dt">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">DTGestionVariable</mca:CSharpReference>
        </InOutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22" xml:space="preserve">"      =&gt;debut invoke code variable Default Value"</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="// Charger la séquence UiPath à partir d'un fichier XAML&#xA;string path = in_FilePath;&#xA;DataTable temp = io_Dt;&#xA;XDocument xDoc = XDocument.Load(path);&#xA;XNamespace uiNameSpace = &quot;http://schemas.uipath.com/workflow/activities&quot;;&#xA;XNamespace xNameSpace=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;;&#xA;XNamespace node=&quot;http://schemas.microsoft.com/netfx/2009/xaml/activities&quot;;&#xA;XNamespace sap2010 = &quot;http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation&quot;;&#xA; &#xA;&#xA;// Trouver tous les éléments &quot;variable&quot; avec un node enfant  &quot;Variable.Default&quot; et puis recuperer la valeur parent&#xA;foreach (var elem in xDoc.Descendants(node + &quot;Variable&quot;).Elements().Where(v =&gt; v.Descendants(node + &quot;Variable.Default&quot;)!=null))&#xA;{&#xA;    DataRow dr = temp.NewRow();&#xA;    dr[0] = path;&#xA;&#x9; dr[1] = elem.Name.LocalName;&#xA;    dr[2] = elem.Parent.Attribute(&quot;Name&quot;).Value;&#xA;    dr[3] = &quot;check variable Default value svp&quot;;&#xA;&#x9;XElement currentElement = elem;&#xA;&#x9;XAttribute idrefAttr = null;&#xA;&#x9;&#x9;while (currentElement != null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    idrefAttr = currentElement.Attribute(sap2010 + &quot;WorkflowViewState.IdRef&quot;);&#xA;&#x9;&#x9;    if (idrefAttr != null)&#xA;&#x9;&#x9;    {&#xA;&#x9;&#x9;        break;&#xA;&#x9;&#x9;    }&#xA;&#x9;&#x9;    currentElement = currentElement.Parent;&#xA;&#x9;&#x9;}&#x9;&#x9;&#xA;&#x9;&#x9;if (idrefAttr != null)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;    string idrefValue = idrefAttr.Value;&#x9;    &#xA;&#x9;&#x9;    dr[4] = idrefValue;&#xA;&#x9;&#x9;}&#xA;    temp.Rows.Add(dr);&#xA;}&#xA;&#xA; &#xA;&#xA;// Enregistrer les modifications apportées à la DataTable et au fichier XAML&#xA;io_Dt = temp;&#xA;xDoc.Save(path);" DisplayName="Invoke code Default Value" sap:VirtualizedContainerService.HintSize="333.6,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">in_file</mca:CSharpValue>
        </InArgument>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_Dt">
          <mca:CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">DTGestionVariable</mca:CSharpReference>
        </InOutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:AppendRange DisplayName="Append Range for DT_GestionVariable" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="AppendRange_1" SheetName="Gestion Variable">
      <ui:AppendRange.DataTable>
        <InArgument x:TypeArguments="sd:DataTable">
          <mca:CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">DTGestionVariable</mca:CSharpValue>
        </InArgument>
      </ui:AppendRange.DataTable>
      <ui:AppendRange.WorkbookPath>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">in_DestFolder+"\\Report Code Review.xlsx"</mca:CSharpValue>
        </InArgument>
      </ui:AppendRange.WorkbookPath>
    </ui:AppendRange>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25" xml:space="preserve">"   =&gt;fin workflow Gestion de variable"</mca:CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>