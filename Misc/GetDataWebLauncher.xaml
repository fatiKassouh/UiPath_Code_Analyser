<Activity mc:Ignorable="sap sap2010" x:Class="GetDataWebLauncher" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:this="clr-namespace:" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TransactionEmail" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionEmailBackup" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionZip" Type="InArgument(x:String)" />
  </x:Members>
  <this:GetDataWebLauncher.out_TransactionItem>
    <InArgument x:TypeArguments="ui:QueueItem" />
  </this:GetDataWebLauncher.out_TransactionItem>
  <this:GetDataWebLauncher.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:GetDataWebLauncher.in_Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1156.8,2050.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetDataWebLauncher_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetDataWebLauncher" sap:VirtualizedContainerService.HintSize="576,1845.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="lstFileNames" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="lstDownloadedFiles" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="534.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Geta data from weblauncher &amp; unzipping files started&quot;]" />
    <Assign DisplayName="Get each file name" sap:VirtualizedContainerService.HintSize="534.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[lstFileNames]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[If(Not (out_TransactionItem.SpecificContent("files_upload").ToString.Contains(",")), new List(Of String) from { out_TransactionItem.SpecificContent("files_upload").ToString }, out_TransactionItem.SpecificContent("files_upload").ToString.Split(","c).ToList)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="534.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Creation of temporary folder&quot;]" />
    <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Creates a folder bearing the same name as the WorkDirectory on the WebLauncher server, in the current user's TEMP folder." DisplayName="Create Temporary Folder" sap:VirtualizedContainerService.HintSize="534.4,140.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[Path.Combine(Path.GetTempPath(),in_Config(&quot;ProjectReference&quot;).ToString)]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CreateDirectory>
    <ParallelForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Go through each file in the list of file names, build the download path, then invoke Powershell to download. This happens in parallel for each file, to increase speed." DisplayName="Parallel For Each" sap:VirtualizedContainerService.HintSize="534.4,865.6" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1" Values="[lstFileNames]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ActivityAction x:TypeArguments="x:String">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:String" Name="file" />
        </ActivityAction.Argument>
        <Sequence sap:VirtualizedContainerService.HintSize="484.8,672.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Don't forget to check the Parameters collection for this object. It's set up to run properly, but in case you need to make changes to the destination, you should also look there." CommandText="wget" DisplayName="Download the file" sap:VirtualizedContainerService.HintSize="443.2,136" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_1">
            <ui:InvokePowerShell.Parameters>
              <InArgument x:TypeArguments="x:String" x:Key="Uri" xml:space="preserve">[in_Config("WebLauncherUrl").ToString()  +in_TransactionZip.Replace("\","/")+"/" + file]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="OutFile">[Path.Combine(Path.GetTempPath(),in_Config("ProjectReference").ToString,file)]</InArgument>
            </ui:InvokePowerShell.Parameters>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokePowerShell>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="443.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Uzipping file : &quot;+file]" />
          <uascw:ExtractFiles DestinationFolderInfo="{x:Null}" Password="{x:Null}" CodePage="Default" DestinationFolder="[Path.Combine(Path.GetTempPath(),in_Config(&quot;ProjectReference&quot;).ToString)]" DisplayName="Extract/Unzip Files" ExtractToADedicatedFolder="True" FileToExtract="[Path.Combine(Path.GetTempPath(),in_Config(&quot;ProjectReference&quot;).ToString,file)]" sap:VirtualizedContainerService.HintSize="443.2,208.8" sap2010:WorkflowViewState.IdRef="ExtractFiles_1" SkipUnsupportedFiles="False" />
          <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="443.2,22.4" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Path.Combine(Path.GetTempPath(),in_Config(&quot;ProjectReference&quot;).ToString,file)]" />
        </Sequence>
      </ActivityAction>
    </ParallelForEach>
    <Assign sap2010:Annotation.AnnotationText="Enumerate each file in the created TEMP directory and save its full path to a List.&#xA;If you need to save files someplace else than the TEMP directory, replace the Path.GetTempPath() function with your own path string." DisplayName="Build list of downloaded file paths" sap:VirtualizedContainerService.HintSize="534.4,168" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[lstDownloadedFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[Directory.GetFiles(Path.Combine(Path.GetTempPath(),in_Config("ProjectReference").ToString)).Select(Function(filename) Path.GetFileName(filename)).ToList()]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="534.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Geta data from weblauncher &amp; unzipping files ended&quot;]" />
  </Sequence>
</Activity>